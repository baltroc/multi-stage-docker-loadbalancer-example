---
- name: build and run server
  hosts: ubuntuGroup
  become: true

  tasks:
    - name: Create workspace
      file:
        path: /home/ubuntu/dockerwork
        state: directory

    - name: Copying Dockerfile
      copy:
        src: "./Dockerfile"
        dest: "/home/ubuntu/dockerwork/"
      ignore_errors: yes

    - name: Copying app.go
      copy:
        src: "./app.go"
        dest: "/home/ubuntu/dockerwork/"
      ignore_errors: yes

    - name: get id of image
      command: 'docker images --format {%raw%}"{{.ID}}"{%endraw%} --no-trunc go-server'
      register: image_id
      changed_when: image_id.rc != 0

    - name: build server image
      docker_image:
        force_source: yes
        name: go-server
        build:
          path: /home/ubuntu/dockerwork
          pull: yes
          rm: yes
        source: build
        state: present
      register: image_build
      changed_when: image_id.stdout != image_build.image.Id

    - name: register hostname
      shell: hostname
      register: currentHostname

    - name: run server docker
      docker_container:
        name: server-container
        image: go-server:latest
        recreate: '{{ True if image_build.changed else omit }}'
        state: started
        ports:
          - "8080:8080"
        hostname: "{{ currentHostname.stdout }}"

    - name: clear unused docker images
      docker_prune:
        images: yes
        images_filters:
          dangling: false
        builder_cache: yes

    - name: remove work directory
      file:
        path: /home/ubuntu/dockerwork
        state: absent
